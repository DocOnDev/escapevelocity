# What is Velocity?

## Velocity is a vector

A vector is an entity that has both magnitude (size) and direction. Velocity indicates the speed of something in a particular direction.

In physics, velocity is the rate at which an object changes its position [^Velocity].
An object that oscillates at a high speed, but always returns to its starting position has a zero velocity.

{icon=quote-left}
G> Velocity is the rate at which a team delivers value to the customer.

In agile software development, velocity is the rate at which a team delivers value to the customer.
Value is quantifiable, and we can therefore say it has size.
The direction is indicated by the traversal from idea to implementation.
A team that completes lots of tasks, but delivers no value to the customer should have a zero velocity.

I say "should" because I see an awful lot of teams that measure velocity based on criteria other than value to the customer.
Some consider a story done when development is complete.
Others are a tad more "mature" and count a story as done when it is ready to go to production.
Not actually in production, mind you; that takes weeks - what with manual testing requirements and change control procedures and getting into queue for the operations team...
And some teams consider a story complete once it is actually in production.
But even that _assumes_ value to the customer.
What if you didn't count a story as done until customers were actually using it and liked it?
If velocity is the rate at which we deliver value to the customer, wouldn't a true measure of velocity include verification of value delivery?

But I digress a bit, perhaps.

For the sake of this book, let's go with "in production" means done.
In this book, we won't get into details of how to deliver at the end of each iteration, much less continuous delivery.

[^Velocity]: Speed and Velocity. (n.d.). Retrieved March 18, 2017, from http://www.physicsclassroom.com/class/1DKin/Lesson-1/Speed-and-Velocity

## Velocity is a lagging indicator

Velocity is also a lagging indicator.
It is a measure taken at the end of a series of steps.
We plan, we prioritize, we work, we test, and then we measure.

### Lagging indicators are abstract

Lagging indicators tend to be aggregate or abstract.
They don't provide detailed insight into the operations, rather they provide
an indication of results.
Net profit is a lagging indicator for a company.
While it tells us about how the company is doing, it gives us no indication of
why the organization is or is not successful.

Let's look at another lagging indicator; unemployment.
The unemployment index is a lagging indicator.
It tells us whether or not unemployment is on the rise or decline,
which in turns tells us if the economy is doing well or poorly, respectively.
An increase in unemployment means a sagging economy.
A decrease in unemployment means a growing economy.
But there is nothing about unemployment that tells us why the economy is
performing in a particular manner or how we might go about making an adjustment
to economic policy to bolster growth.
Moreover, the way to bolster the economy is not to focus on unemployment, but to
address the underlying issues.

TODO: Fact check these statements

Policy that focuses on increasing employment is more about the spirit of the
people than it is about economic policy.
Historically, policy focused on jobs creation has actually hurt the economy.
Politicians buy votes with jobs.
Politicians do not improve economies with jobs programs.

Similarly, one of the problems with velocity as a lagging indicator is that
while it can tell how much work we delivered over a given time period, it
cannot tell how well the team is doing at ensuring consistent delivery or at
improving their process overall.
For some teams, velocity may be an indicator of team health or at least capability,
but it provides no insight into root causes.

A stable or slightly increasing velocity is usually considered a good thing.
When managers see a stable velocity from iteration to iteration, they may become
complacent and forgo any improvement efforts.
But the reality is that there are actually numerous factors that impact a
team's ability to deliver and the current velocity trend may be more a matter
of coincidence than performance.
We will look at a number of factors that impact velocity in later sections.

### Lagging Indicators are poor short-term predictors

Lagging indicators [^LaggingKPIs] tend to be weak indicators for the short-term
and are much more reliable for confirming long-term trends.
Velocity from the immediately concluded iteration, for example, is not often a
good indicator of what the velocity will be in the next iteration.
From one iteration to the next, velocity can vary wildly due to any number of
factors.

But, we can look at velocity over time and confirm trends we might suspect, such
as a lower average velocity during holiday seasons.
This doesn't tell us what the velocity will be in November or December, but it
does let us know that the odds are good these months will have lower velocity
numbers than September or October.

[^LaggingKPIs]: Leading vs. Lagging KPIs â€“ What Successful Companies Measure. (2016, August 17). Retrieved March 18, 2017, from https://www.accountexnetwork.com/blog/2014/10/leading-indicators/

## Velocity is a measure of a complex system

This is ultimately quite significant.
Velocity, while a simple concept, is actually a measure of output for a complex system.
Think about the number of factors that go into a velocity measurement.
There is the organizational mission, the broader business objectives, and the objective of the product itself.
There are product owners, designers, architects, developers, testers, subject matter experts, security specialists, database specialists, governance, and production specialists involved.
There are stand-ups, planning meetings, and retrospectives.
There are epics, stories, and tasks all tracked on a board or in a system with multiple lanes representing different key states in the delivery of each single piece of work.
After all these individuals interact with one another, responding to change, and collaborating with the customer in pursuit of working software, we take a single measurement.
That single measurement represents the interactions of the individuals and all of their adaptions to change in the delivery of working software.

Velocity is a simple measure of a very complex system.

While a simple measure of a complex system may sound ideal, in this case, it is generally insufficient.
Velocity doesn't tell us enough to be particularly useful.
From velocity alone one cannot ferret out root causes.
On cannot determine conclusively that the team is doing better (or worse) from a rising (or falling) velocity.

Velocity is but one dimension to consider.
To measure creative work by throughput alone is to not measure it at all; quality and impact are essential.
